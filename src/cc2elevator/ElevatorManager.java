/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package cc2elevator;

import cc2elevator.Elevators.ElevatorPanel;
import static java.lang.Math.abs;
import java.util.logging.FileHandler;
import java.util.logging.Logger;

/**
 *
 * @author ejuarez
 */
public class ElevatorManager extends javax.swing.JFrame {

    ElevatorPanel[] elevp;
    int levels;
    int elevators;
    private long stopt;
    private long movet;
    
    
    /**
     * Creates new form CC2Elevator
     */
    public ElevatorManager() {
        
        initComponents();
        setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jButton5 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jButton1.setText("Inicializar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Simulacion");
        jButton2.setEnabled(false);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jTextArea1.setEditable(false);
        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jButton3.setText("UP");
        jButton3.setEnabled(false);
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("DOWN");
        jButton4.setEnabled(false);
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jComboBox1.setEnabled(false);

        jLabel1.setText("Nivel");

        jButton5.setText("RESET");
        jButton5.setEnabled(false);
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton2)
                        .addGap(18, 18, 18)
                        .addComponent(jTextField1))
                    .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 681, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(60, 60, 60)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(99, 99, 99))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(23, Short.MAX_VALUE))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton5)
                .addGap(115, 115, 115))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton3)
                            .addComponent(jButton4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1))
                    .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 459, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton5)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    
    
    
    
    public void pushUp(int level) {
        
        int nl=10000;
        int val=-1;
        for (int i=0;i<elevators;i++){
            
            System.out.println("valor absoluto"+abs(elevp[i].getPisoActual()-level));
            
            if (abs(elevp[i].getPisoActual()-level)<nl){
                if (elevp[i].getPisoActual()<level){
                    if ((elevp[i].getDireccion()==1) || (elevp[i].getDireccion()==0)){
                        System.out.println("entra");
                        val=i;
                        nl=abs(elevp[i].getPisoActual()-level);
                    }
                }else{
                    //cuando el elevador se encuentra arriba del nivel actual, va hacia abajo y 
                    if ((elevp[i].getDireccion()==-1) || (elevp[i].getDireccion()==0)){
                        System.out.println("entra");
                        val=i;
                        nl=abs(elevp[i].getPisoActual()-level);
                    }
                }
                
            }
        }
        
        int cp=5000;
        
        if (val==-1){
            for (int i=0;i<elevators;i++){
            
                if ((abs(elevp[i].getPisoActual()-level)+elevp[i].getCantidadPeticionesCola())<cp){
                    System.out.println("entra");
                    val=i;
                    cp=(abs(elevp[i].getPisoActual()-level)+elevp[i].getCantidadPeticionesCola());
                }
            }
            
        }
        
        
        
        System.out.println("elevador mas cerca"+val);
        System.out.println("ELEVADOR 0 " +elevp[0].getPisoActual());
        System.out.println("ELEVADOR 1 " +elevp[1].getPisoActual());
        System.out.println("ELEVADOR 2 " +elevp[2].getPisoActual());
        
        if (val<0){
            System.out.println("NO SE ENCUENTRA ELEVADOR PARA DICHA ACCION");
        }else{
            //agrega el comando de detenerse en nivel para que ingresen personas
            //poolElevator[val].addComand
            elevp[val].pushUp(level);
        }
        
    }
    

    
    public void pushDown(int level) {
       
        int nl=10000;
        int val=-1;
        for (int i=0;i<elevators;i++){
            
            System.out.println("valor absoluto"+abs(elevp[i].getPisoActual()-level));
            
            if (abs(elevp[i].getPisoActual()-level)<nl){
                if (elevp[i].getPisoActual()>level){
                    if ((elevp[i].getDireccion()==-1) || (elevp[i].getDireccion()==0)){
                        System.out.println("entra");
                        val=i;
                        nl=abs(elevp[i].getPisoActual()-level);
                    }
                }else{
                    if ((elevp[i].getDireccion()==1) || (elevp[i].getDireccion()==0)){
                        System.out.println("entra");
                        val=i;
                        nl=abs(elevp[i].getPisoActual()-level);
                    }
                }
                
            }
        }
        
        int cp=5000;
        
        if (val==-1){
            for (int i=0;i<elevators;i++){
            
                if ((abs(elevp[i].getPisoActual()-level)+elevp[i].getCantidadPeticionesCola())<cp){
                    System.out.println("entra");
                    val=i;
                    cp=(abs(elevp[i].getPisoActual()-level)+elevp[i].getCantidadPeticionesCola());
                }
            }
            
        }
        
        if (val<0){
            System.out.println("NO SE ENCUENTRA ELEVADOR PARA DICHA ACCION");
        }else{
            //agrega el comando de detenerse en nivel para que ingresen personas
            //poolElevator[val].addComand
            elevp[val].pushDown(level);
        }
        
        
    }


    
    
    
    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        initialSettings init=new initialSettings(this,true);
        init.setVisible(true);
        int estatus=init.getReturnStatus();
        if (estatus==1){
            this.jButton2.setEnabled(true);
            this.jComboBox1.setEnabled(true);
            this.jButton3.setEnabled(true);
            this.jButton4.setEnabled(true);
            this.jButton5.setEnabled(true);
        }
        System.out.print(init.jTextField1.getText());
        stopt=Long.valueOf(init.jTextField1.getText());
        movet=Long.valueOf(init.jTextField2.getText());

        
        levels=Integer.parseInt(init.jTextField3.getText());
        elevators=Integer.parseInt(init.jTextField4.getText());
    
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
         elevp =new ElevatorPanel[elevators];
        for (int j=0;j<elevators;j++){
            elevp[j]=new ElevatorPanel();
            
            elevp[j].setID(j);
            elevp[j].setDireccion(1);
            elevp[j].setPisoActual(0);
            elevp[j].setTime(stopt,movet);
            elevp[j].startlevel(levels);
            elevp[j].start();
            this.jTabbedPane1.add(String.valueOf(j+1), elevp[j]);
            
        }
        for (int i=0;i<levels;i++){
            this.jComboBox1.addItem(i+1);
        }
        
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        
        this.pushUp(this.jComboBox1.getSelectedIndex());
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        
        this.pushDown(this.jComboBox1.getSelectedIndex());
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
         for (int j=0;j<elevators;j++){
            elevp[j].Reset();
            
            
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ElevatorManager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ElevatorManager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ElevatorManager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ElevatorManager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ElevatorManager().setVisible(true);
            }
        });
    }
    public class Log {

        public Logger logger;
        FileHandler fh;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JComboBox<Integer> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}


